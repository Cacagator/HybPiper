HybSeq Pipeline

by Matt Johnson and Norm Wickett, Chicago Botanic Gardens

Purpose: 
Targeted bait capture is a technique for sequencing many loci simultaneously.
The illumina reads are then assembled into long contigs.
This pipeline attempts to assign contigs to bait protein sequences.
The main output is one FASTA file per protein, containing the CDS portion of the homologous protein sequence.

------------Dependencies----------------
Python 2.7 or later
BIOPYTHON 1.6 or later
EXONERATE
BLAST command line tools

This pipeline runs with Python, version 2.7 or later, to take advantage of the argparse module for command-line argument.
It requires BIOPYTHON (version 1.6 or later)for parsing and handling nucleotide and protein sequences (www.biopython.org)
EXONERATE is used for alignment between bait proteins and assemblies, and retrieval of in-frame CDS sequences. 
If your baits were constructed with multiple sequences per gene, the "query_file_builder.py" script will create a "tailored" bait file, using the best match to the assembly for each gene. This script requires that BLAST command-line tools (specifically blastx) are installed in the $PATH
-----------------------------------------

-----------------Setup-------------------
Install the dependencies.
Construct a "bait file" of protein sequences. If you have just one sequence per bait, simply concatenate all of them into one file.
If you have more than one sequence per bait, they need to be identified before concatenation.
The ID for each sequence should include the bait source and the protein ID, separated by a hyphen. For example:
>Amborella-atpH
MNPLISAASVIAAGLAVGLASIGPGVGQGTAAGQAVEGIARQPEAEGKIRGTLLLSLAFM
[Add helper script to do this]

------------------------------------------




The major steps of the pipeline include:

1) Generation of control files, containing filenames and various parameters.

2) Given an assembly and a set of protein baits for each gene, select the best protein bait for this assembly. This generates a “tailored” bait file, so that exonerate has the best chance to find a CDS in the assembly.

3) Conduct one or more exonerate searches for each protein in the assembly, ensuring that each contig is also the best hit for the protein (Reciprocal Best Hit). If multiple contigs match the same protein in non-overlapping sequences, stitch the hits together into a “supercontig”

4) In a subdirectory, generate separate FASTA files containing either the nucleotide (FNA) or amino acid (FAA) sequence for each protein. 

5) Optional utilities after running the pipeline for multiple assemblies: 
     NOTE: for these utilities to work, the files must be in the same directory hierarchy created by the pipeline.
               (i.e. species/alignments/FAA/ and species/alignments/FNA/)
     a) Generate a single file for one or more proteins.
               Simple FASTA or use MAFFT to align it.
     b) Summarize the completeness of the alignments, gene by gene.
               Creates a matrix: each row is a species with length of each protein (in alphabetical order) separated by tabs.
     c) Matrixmerge: generate supermatrix from all aligned matricies.                                                                                     

